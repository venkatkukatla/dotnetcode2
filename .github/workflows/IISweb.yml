name: Deploy to IIS via Web Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: self-hosted

    # steps:
    #   - name: Checkout Code
    #     uses: actions/checkout@v3

      # - name: Setup MSBuild
      #   uses: microsoft/setup-msbuild@v1

      # - name: Allow PowerShell Scripts
      #   run: Set-ExecutionPolicy RemoteSigned -Scope Process -Force
      #   shell: powershell

      # # - name: Restore Packages
      # #   run: nuget restore dotnet.sln

      # - name: Build Solution
      #   run: msbuild.exe dotnet.sln /p:Configuration=Release

      # - name: Create Deploy Folder
      #   run: mkdir -Force D:\a\dotnetcode2\deploy

      # - name: Publish to Folder
      #   run: |
      #     msbuild.exe dotnet.sln `
      #       /p:DeployOnBuild=true `
      #       /p:WebPublishMethod=Package `
      #       /p:PackageLocation="D:\a\dotnetcode2\deploy\dotnet.zip" `
      #       /p:Configuration=Release

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Deploy to IIS using Web Deploy
        run: |
          $param = '-setParam:"IIS Web Application Name=Default Web Site/dotnet_deploy"'
          & "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe" `
             -verb:sync `
             -source:package='D:\a\dotnetcode2\deploy\dotnet.zip' `
             -dest:auto,computerName='localhost',authType='NTLM' `
             $param `
             -allowUntrusted `
             -verbose
        shell: powershell


      # - name: List Published Files (Debug)
      #   run: dir D:\a\dotnetcode2\deploy

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dotnet-deploy-package
      #     path: D:/a/dotnetcode2/deploy/dotnet.zip
